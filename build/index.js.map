{"version":3,"file":"index.js","sources":["../node_modules/camelcase/index.js","../src/util/string-util.js","../src/ComponentRegistry.js","../node_modules/deepmerge/dist/cjs.js","../src/PrefabComponent.js","../src/Prefab.js","../src/PrefabRegistry.js","../src/Component.js","../src/EntityEvent.js","../src/util/bit-util.js","../src/Entity.js","../src/Query.js","../src/World.js","../src/Engine.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = {};\n\nexport const camelString = (value) => {\n    const result = camelCache[value];\n\n    if (!result) {\n        camelCache[value] = camelcaseSlow(value);\n\n        return camelCache[value];\n    }\n\n    return result;\n};\n","import { camelString } from './util/string-util';\n\nexport class ComponentRegistry {\n    _cbit = 0;\n    _map = {};\n\n    register(clazz) {\n        const key = camelString(clazz.name);\n\n        clazz.prototype._ckey = key;\n        clazz.prototype._cbit = BigInt(++this._cbit);\n\n        this._map[key] = clazz;\n    }\n\n    get(key) {\n        return this._map[key];\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    constructor(clazz, properties = {}, overwrite = true) {\n        this.clazz = clazz;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.clazz.allowMultiple && entity.has(this.clazz)) {\n            if (!this.overwrite) {\n                return;\n            }\n\n            const comp = entity[this.clazz.prototype._ckey];\n\n            entity.remove(comp);\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.clazz, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, prefabProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, prefabProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component) => {\n            const clazz = component.clazz;\n            const ckey = clazz.prototype._ckey;\n\n            let initialCompProps = {};\n\n            if (clazz.allowMultiple) {\n                if (clazz.keyProperty) {\n                    const key = component.properties[clazz.keyProperty];\n\n                    if (prefabProps[ckey] && prefabProps[ckey][key]) {\n                        initialCompProps = prefabProps[ckey][key];\n                    }\n                } else {\n                    if (!arrComps[ckey]) {\n                        arrComps[ckey] = 0;\n                    }\n\n                    if (\n                        prefabProps[ckey] &&\n                        prefabProps[ckey][arrComps[ckey]]\n                    ) {\n                        initialCompProps = prefabProps[ckey][arrComps[ckey]];\n                    }\n\n                    arrComps[ckey]++;\n                }\n            } else {\n                initialCompProps = prefabProps[ckey];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import PrefabComponent from './PrefabComponent';\nimport Prefab from './Prefab';\nimport { camelString } from './util/string-util';\n\nexport class PrefabRegistry {\n    _prefabs = {};\n    _engine = null;\n\n    constructor(engine) {\n        this._engine = engine;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        comps.forEach((componentData) => {\n            if (typeof componentData === 'string') {\n                const ckey = camelString(componentData);\n                const clazz = this._engine._components.get(ckey);\n\n                if (clazz) {\n                    prefab.addComponent(new PrefabComponent(clazz));\n\n                    return;\n                }\n            }\n\n            if (typeof componentData === 'object') {\n                const ckey = camelString(componentData.type);\n                const clazz = this._engine._components.get(ckey);\n\n                if (clazz) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            clazz,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n\n                    return;\n                }\n            }\n\n            console.warn(\n                `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n            );\n        });\n\n        return prefab;\n    }\n\n    register(data) {\n        const prefab = this.deserialize(data);\n\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(name) {\n        return this._prefabs[name];\n    }\n\n    create(world, name, properties = {}) {\n        const prefab = this.get(name);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab \"${name}\" since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = world.createEntity();\n\n        entity._qeligible = false;\n\n        prefab.applyToEntity(entity, properties);\n\n        entity._qeligible = true;\n        entity._candidacy();\n\n        return entity;\n    }\n}\n","export class Component {\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    get world() {\n        return this.entity.world;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    constructor(properties = {}) {\n        Object.assign(this, this.constructor.properties, properties);\n    }\n\n    destroy() {\n        this.entity.remove(this);\n    }\n\n    _onDestroyed() {\n        this.onDestroyed();\n        delete this.entity;\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        if (typeof this[evt.handlerName] === 'function') {\n            this[evt.handlerName](evt);\n        }\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.onAttached(entity);\n    }\n\n    serialize() {\n        const ob = {};\n\n        for (const key in this.constructor.properties) {\n            ob[key] = this[key];\n        }\n\n        return ob;\n    }\n\n    onAttached(entity) {}\n    onDestroyed() {}\n    onEvent(evt) {}\n}\n","import { camelString } from './util/string-util';\n\nexport class EntityEvent {\n    data = {};\n    prevented = false;\n    handled = false;\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n        this.handlerName = camelString(`on ${this.name}`);\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.handled = true;\n        this.prevented = true;\n    }\n\n    prevent() {\n        this.prevented = true;\n    }\n}\n","const ONE = 1n;\n\nexport const subtractBit = (num, bit) => {\n    return num & ~(1n << bit);\n};\n\nexport const addBit = (num, bit) => {\n    return num | (ONE << bit);\n};\n\nexport const hasBit = (num, bit) => {\n    return (num >> bit) % 2n !== 0n;\n};\n\nexport const bitIntersection = (n1, n2) => {\n    return n1 & n2;\n};\n","import { Component } from './Component';\nimport { EntityEvent } from './EntityEvent';\nimport { addBit, hasBit, subtractBit } from './util/bit-util';\n\nconst attachComponent = (entity, component) => {\n    const key = component._ckey;\n\n    entity[key] = component;\n    entity.components[key] = component;\n};\n\nconst attachComponentKeyed = (entity, component) => {\n    const key = component._ckey;\n\n    if (!entity.components[key]) {\n        entity[key] = {};\n        entity.components[key] = {};\n    }\n\n    entity[key][component[component.keyProperty]] = component;\n    entity.components[key][component[component.keyProperty]] = component;\n};\n\nconst attachComponentArray = (entity, component) => {\n    const key = component._ckey;\n\n    if (!entity.components[key]) {\n        entity[key] = [];\n        entity.components[key] = [];\n    }\n\n    entity[key].push(component);\n    entity.components[key].push(component);\n};\n\nconst removeComponent = (entity, component) => {\n    const key = component.prototype._ckey;\n\n    delete entity[key];\n    delete entity.components[key];\n\n    entity._cbits = subtractBit(entity._cbits, component._cbit);\n    entity._candidacy();\n};\n\nconst removeComponentKeyed = (entity, component) => {\n    const key = component._ckey;\n    const keyProp = component[component.keyProperty];\n\n    delete entity[key][keyProp];\n    delete entity.components[key][keyProp];\n\n    if (Object.keys(entity[key]).length <= 0) {\n        delete entity[key];\n        delete entity.components[key];\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\n        entity._candidacy();\n    }\n};\n\nconst removeComponentArray = (entity, component) => {\n    const key = component._ckey;\n    const idx = entity[key].indexOf(component);\n\n    entity[key].splice(idx, 1);\n    entity.components[key].splice(idx, 1);\n\n    if (entity[key].length <= 0) {\n        delete entity[key];\n        delete entity.components[key];\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\n        entity._candidacy()\n    }\n};\n\nconst serializeComponent = (component) => {\n    return component.serialize();\n};\n\nconst serializeComponentArray = (arr) => {\n    return arr.map(serializeComponent);\n};\n\nconst serializeComponentKeyed = (ob) => {\n    const ser = {};\n\n    for (const k in ob) {\n        ser[k] = serializeComponent(ob[k]);\n    }\n\n    return ser;\n};\n\nexport class Entity {\n    _cbits = 0n;\n    _qeligible = true;\n\n    constructor(world, id) {\n        this.world = world;\n        this.id = id;\n        this.components = {};\n        this.isDestroyed = false;\n    }\n\n    _candidacy() {\n        if (this._qeligible) {\n            this.world._candidate(this);\n        }\n    }\n\n    add(clazz, properties) {\n        const component = new clazz(properties);\n\n        if (component.keyProperty) {\n            attachComponentKeyed(this, component);\n        } else if (component.allowMultiple) {\n            attachComponentArray(this, component);\n        } else {\n            attachComponent(this, component);\n        }\n\n        this._cbits = addBit(this._cbits, component._cbit);\n        component._onAttached(this);\n\n        this._candidacy();\n    }\n\n    has(clazz) {\n        return hasBit(this._cbits, clazz.prototype._cbit);\n    }\n\n    remove(component) {\n        if (component.keyProperty) {\n            removeComponentKeyed(this, component);\n        } else if (component.allowMultiple) {\n            removeComponentArray(this, component);\n        } else {\n            removeComponent(this, component);\n        }\n\n        component._onDestroyed();\n    }\n\n    destroy() {\n        for (const k in this.components) {\n            const v = this.components[k];\n\n            if (v instanceof Component) {\n                this._cbits = subtractBit(this._cbits, v._cbit);\n                v._onDestroyed();\n            } else if (v instanceof Array) {\n                for (const component of v) {\n                    this._cbits = subtractBit(this._cbits, component._cbit);\n                    component._onDestroyed();\n                }\n            } else {\n                for (const component of Object.values(v)) {\n                    this._cbits = subtractBit(this._cbits, component._cbit);\n                    component._onDestroyed();\n                }\n            }\n\n            delete this[k];\n            delete this.components[k];\n        }\n\n        this._candidacy();\n        this.world._destroyed(this.id);\n        this.components = {};\n        this.isDestroyed = true;\n    }\n\n    serialize() {\n        const components = {};\n\n        for (const k in this.components) {\n            const v = this.components[k];\n\n            if (v instanceof Component) {\n                components[k] = serializeComponent(v);\n            } else if (v instanceof Array) {\n                components[k] = serializeComponentArray(v);\n            } else {\n                components[k] = serializeComponentKeyed(v);\n            }\n        }\n\n        return {\n            id: this.id,\n            ...components,\n        };\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const key in this.components) {\n            const v = this.components[key];\n\n            if (v instanceof Component) {\n                v._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else if (v instanceof Array) {\n                for (let i = 0; i < v.length; i++) {\n                    v[i]._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            } else {\n                for (const component of Object.values(v)) {\n                    component._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { addBit, bitIntersection } from './util/bit-util';\n\nexport class Query {\n    _cache = [];\n    _onAddListeners = [];\n    _onRemoveListeners = [];\n\n    constructor(world, filters) {\n        this._world = world;\n\n        const any = filters.any || [];\n        const all = filters.all || [];\n        const none = filters.none || [];\n\n        this._any = any.reduce((s, c) => {\n            return addBit(s, c.prototype._cbit);\n        }, 0n);\n\n        this._all = all.reduce((s, c) => {\n            return addBit(s, c.prototype._cbit);\n        }, 0n);\n\n        this._none = none.reduce((s, c) => {\n            return addBit(s, c.prototype._cbit);\n        }, 0n);\n\n        this.refresh();\n    }\n\n    onEntityAdded(fn) {\n        this._onAddListeners.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onRemoveListeners.push(fn);\n    }\n\n    has(entity) {\n        return this.idx(entity) >= 0;\n    }\n\n    idx(entity) {\n        return this._cache.indexOf(entity);\n    }\n\n    matches(entity) {\n        const bits = entity._cbits;\n\n        const any = this._any === 0n || bitIntersection(bits, this._any) > 0;\n        const all = bitIntersection(bits, this._all) === this._all;\n        const none = bitIntersection(bits, this._none) === 0n;\n\n        return any && all && none;\n    }\n\n    candidate(entity) {\n        const idx = this.idx(entity);\n        const isTracking = idx >= 0;\n\n        if (!entity.isDestroyed && this.matches(entity)) {\n            if (!isTracking) {\n                this._cache.push(entity);\n                this._onAddListeners.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.splice(idx, 1);\n            this._onRemoveListeners.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    refresh() {\n        this._cache = [];\n        this._world._entities.forEach((entity) => {\n            this.candidate(entity);\n        });\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import { Entity } from './Entity';\nimport { Query } from './Query';\nimport { camelString } from './util/string-util';\n\nexport class World {\n    _id = 0;\n    _queries = [];\n    _entities = new Map();\n\n    constructor(engine) {\n        this.engine = engine;\n    }\n\n    createId() {\n        return ++this._id + Math.random().toString(36).substr(2, 9);\n    }\n\n    getEntity(id) {\n        return this._entities.get(id);\n    }\n\n    getEntities() {\n        return this._entities.values();\n    }\n\n    createEntity(id = this.createId()) {\n        const entity = new Entity(this, id);\n\n        this._entities.set(id, entity);\n\n        return entity;\n    }\n\n    destroyEntity(id) {\n        const entity = this.getEntity(id);\n\n        if (entity) {\n            entity.destroy();\n        }\n    }\n\n    destroyEntities() {\n        this._entities.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    destroy() {\n        this.destroyEntities();\n        this._id = 0;\n        this._queries = [];\n        this._entities = new Map();\n    }\n\n    createQuery(filters) {\n        const query = new Query(this, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    createPrefab(name, properties = {}) {\n        return this.engine._prefabs.create(this, name, properties);\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities || this._entities;\n\n        list.forEach((e) => {\n            json.push(e.serialize());\n        });\n\n        return {\n            entities: json,\n        };\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this._createOrGetEntityById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this._deserializeEntity(entityData);\n        }\n    }\n\n    _createOrGetEntityById(id) {\n        return this.getEntity(id) || this.createEntity(id);\n    }\n\n    _deserializeEntity(data) {\n        const { id, ...components } = data;\n        const entity = this._createOrGetEntityById(id);\n        entity._qeligible = false;\n\n        Object.entries(components).forEach(([key, value]) => {\n            const type = camelString(key);\n            const def = this.engine._components.get(type);\n\n            if (def.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(def, d);\n                });\n            } else {\n                entity.add(def, value);\n            }\n        });\n\n        entity._qeligible = true;\n        entity._candidacy();\n    }\n\n    _candidate(entity) {\n        this._queries.forEach((q) => q.candidate(entity));\n    }\n\n    _destroyed(id) {\n        return this._entities.delete(id);\n    }\n}\n","import { ComponentRegistry } from './ComponentRegistry';\nimport { PrefabRegistry } from './PrefabRegistry';\nimport { World } from './World';\n\nexport class Engine {\n    _components = new ComponentRegistry();\n    _prefabs = new PrefabRegistry(this);\n\n    registerComponent(clazz) {\n        this._components.register(clazz);\n    }\n\n    registerPrefab(data) {\n        this._prefabs.register(data);\n    }\n\n    createWorld() {\n        return new World(this);\n    }\n\n    destroyWorld(world) {\n        world.destroy();\n    }\n}\n"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","slice","toLocaleLowerCase","toLocaleUpperCase","camelCase","input","options","Array","isArray","TypeError","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","camelCache","camelString","value","result","camelcaseSlow","ComponentRegistry","register","clazz","key","name","prototype","_ckey","_cbit","BigInt","_map","get","isMergeableObject","isNonNullObject","isSpecial","stringValue","Object","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","cloneUnlessOtherwiseSpecified","clone","deepmerge","defaultArrayMerge","target","source","concat","element","getMergeFunction","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","symbol","propertyIsEnumerable","getKeys","keys","propertyIsOnObject","object","property","propertyIsUnsafe","hasOwnProperty","mergeObject","destination","forEach","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1","PrefabComponent","constructor","properties","overwrite","applyToEntity","entity","initialProps","allowMultiple","has","comp","remove","props","merge","add","Prefab","addComponent","prefabComponent","components","push","prefabProps","inherit","parent","arrComps","component","ckey","initialCompProps","keyProperty","PrefabRegistry","engine","_engine","deserialize","data","registered","prefab","ref","console","warn","comps","componentData","_components","type","_prefabs","create","world","createEntity","_qeligible","_candidacy","Component","assign","destroy","_onDestroyed","onDestroyed","_onEvent","evt","onEvent","handlerName","_onAttached","onAttached","serialize","ob","EntityEvent","is","handle","handled","prevented","prevent","ONE","subtractBit","num","bit","addBit","hasBit","bitIntersection","n1","n2","attachComponent","attachComponentKeyed","attachComponentArray","removeComponent","_cbits","removeComponentKeyed","keyProp","removeComponentArray","idx","indexOf","splice","serializeComponent","serializeComponentArray","arr","serializeComponentKeyed","ser","k","Entity","id","isDestroyed","_candidate","v","values","_destroyed","fireEvent","Query","filters","_world","any","none","_any","s","c","_all","_none","refresh","onEntityAdded","fn","_onAddListeners","onEntityRemoved","_onRemoveListeners","_cache","matches","bits","candidate","isTracking","cb","_entities","World","Map","createId","_id","Math","random","substr","getEntity","getEntities","set","destroyEntity","destroyEntities","_queries","createQuery","query","createPrefab","entities","json","list","e","entityData","_createOrGetEntityById","_deserializeEntity","entries","def","d","q","delete","Engine","registerComponent","registerPrefab","createWorld","destroyWorld"],"mappings":";;;;;;;;;;;;;;;AAEA,MAAMA,iBAAiB,GAAGC,MAAM,IAAI;AACnC,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,mBAAmB,GAAG,KAA1B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC,UAAME,SAAS,GAAGN,MAAM,CAACI,CAAD,CAAxB;;AAEA,QAAIH,eAAe,IAAI,YAAYM,IAAZ,CAAiBD,SAAjB,CAAvB,EAAoD;AACnDN,MAAAA,MAAM,GAAGA,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgBJ,CAAhB,IAAqB,GAArB,GAA2BJ,MAAM,CAACQ,KAAP,CAAaJ,CAAb,CAApC;AACAH,MAAAA,eAAe,GAAG,KAAlB;AACAE,MAAAA,mBAAmB,GAAGD,eAAtB;AACAA,MAAAA,eAAe,GAAG,IAAlB;AACAE,MAAAA,CAAC;AACD,KAND,MAMO,IAAIF,eAAe,IAAIC,mBAAnB,IAA0C,YAAYI,IAAZ,CAAiBD,SAAjB,CAA9C,EAA2E;AACjFN,MAAAA,MAAM,GAAGA,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgBJ,CAAC,GAAG,CAApB,IAAyB,GAAzB,GAA+BJ,MAAM,CAACQ,KAAP,CAAaJ,CAAC,GAAG,CAAjB,CAAxC;AACAD,MAAAA,mBAAmB,GAAGD,eAAtB;AACAA,MAAAA,eAAe,GAAG,KAAlB;AACAD,MAAAA,eAAe,GAAG,IAAlB;AACA,KALM,MAKA;AACNA,MAAAA,eAAe,GAAGK,SAAS,CAACG,iBAAV,OAAkCH,SAAlC,IAA+CA,SAAS,CAACI,iBAAV,OAAkCJ,SAAnG;AACAH,MAAAA,mBAAmB,GAAGD,eAAtB;AACAA,MAAAA,eAAe,GAAGI,SAAS,CAACI,iBAAV,OAAkCJ,SAAlC,IAA+CA,SAAS,CAACG,iBAAV,OAAkCH,SAAnG;AACA;AACD;;AAED,SAAON,MAAP;AACA,CA3BD;;AA6BA,MAAMW,SAAS,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACrC,MAAI,EAAE,OAAOD,KAAP,KAAiB,QAAjB,IAA6BE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAA/B,CAAJ,EAA0D;AACzD,UAAM,IAAII,SAAJ,CAAc,8CAAd,CAAN;AACA;;AAEDH,EAAAA,OAAO,GAAG,EACT,GAAG;AAACI,MAAAA,UAAU,EAAE;AAAb,KADM;AAET,OAAGJ;AAFM,GAAV;;AAKA,QAAMK,WAAW,GAAGC,CAAC,IAAIN,OAAO,CAACI,UAAR,GAAqBE,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYV,iBAAZ,KAAkCS,CAAC,CAACX,KAAF,CAAQ,CAAR,CAAvD,GAAoEW,CAA7F;;AAEA,MAAIL,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACzBA,IAAAA,KAAK,GAAGA,KAAK,CAACS,GAAN,CAAUF,CAAC,IAAIA,CAAC,CAACG,IAAF,EAAf,EACNC,MADM,CACCJ,CAAC,IAAIA,CAAC,CAACd,MADR,EAENmB,IAFM,CAED,GAFC,CAAR;AAGA,GAJD,MAIO;AACNZ,IAAAA,KAAK,GAAGA,KAAK,CAACU,IAAN,EAAR;AACA;;AAED,MAAIV,KAAK,CAACP,MAAN,KAAiB,CAArB,EAAwB;AACvB,WAAO,EAAP;AACA;;AAED,MAAIO,KAAK,CAACP,MAAN,KAAiB,CAArB,EAAwB;AACvB,WAAOQ,OAAO,CAACI,UAAR,GAAqBL,KAAK,CAACF,iBAAN,EAArB,GAAiDE,KAAK,CAACH,iBAAN,EAAxD;AACA;;AAED,QAAMgB,YAAY,GAAGb,KAAK,KAAKA,KAAK,CAACH,iBAAN,EAA/B;;AAEA,MAAIgB,YAAJ,EAAkB;AACjBb,IAAAA,KAAK,GAAGb,iBAAiB,CAACa,KAAD,CAAzB;AACA;;AAEDA,EAAAA,KAAK,GAAGA,KAAK,CACXc,OADM,CACE,WADF,EACe,EADf,EAENjB,iBAFM,GAGNiB,OAHM,CAGE,iCAHF,EAGqC,CAACC,CAAD,EAAIC,EAAJ,KAAWA,EAAE,CAAClB,iBAAH,EAHhD,EAINgB,OAJM,CAIE,4BAJF,EAIgCG,CAAC,IAAIA,CAAC,CAACnB,iBAAF,EAJrC,CAAR;AAMA,SAAOQ,WAAW,CAACN,KAAD,CAAlB;AACA,CAzCD;;AA2CAkB,aAAA,GAAiBnB,SAAjB;;AAEAmB,YAAA,GAAyBnB,SAAzB;;;AC1EA,MAAMoB,UAAU,GAAG,EAAnB;AAEO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAMC,MAAM,GAAGH,UAAU,CAACE,KAAD,CAAzB;;AAEA,MAAI,CAACC,MAAL,EAAa;AACTH,IAAAA,UAAU,CAACE,KAAD,CAAV,GAAoBE,SAAa,CAACF,KAAD,CAAjC;AAEA,WAAOF,UAAU,CAACE,KAAD,CAAjB;AACH;;AAED,SAAOC,MAAP;AACH,CAVM;;ACFA,MAAME,iBAAN,CAAwB;AAAA;AAAA,mCACnB,CADmB;;AAAA,kCAEpB,EAFoB;AAAA;;AAI3BC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,UAAMC,GAAG,GAAGP,WAAW,CAACM,KAAK,CAACE,IAAP,CAAvB;AAEAF,IAAAA,KAAK,CAACG,SAAN,CAAgBC,KAAhB,GAAwBH,GAAxB;AACAD,IAAAA,KAAK,CAACG,SAAN,CAAgBE,KAAhB,GAAwBC,MAAM,CAAC,EAAE,KAAKD,KAAR,CAA9B;AAEA,SAAKE,IAAL,CAAUN,GAAV,IAAiBD,KAAjB;AACH;;AAEDQ,EAAAA,GAAG,CAACP,GAAD,EAAM;AACL,WAAO,KAAKM,IAAL,CAAUN,GAAV,CAAP;AACH;;AAf0B;;ACA/B,IAAIQ,iBAAiB,GAAG,SAASA,iBAAT,CAA2Bd,KAA3B,EAAkC;AACzD,SAAOe,eAAe,CAACf,KAAD,CAAf,IACH,CAACgB,SAAS,CAAChB,KAAD,CADd;AAEA,CAHD;;AAKA,SAASe,eAAT,CAAyBf,KAAzB,EAAgC;AAC/B,SAAO,CAAC,CAACA,KAAF,IAAW,OAAOA,KAAP,KAAiB,QAAnC;AACA;;AAED,SAASgB,SAAT,CAAmBhB,KAAnB,EAA0B;AACzB,MAAIiB,WAAW,GAAGC,MAAM,CAACV,SAAP,CAAiBW,QAAjB,CAA0BC,IAA1B,CAA+BpB,KAA/B,CAAlB;AAEA,SAAOiB,WAAW,KAAK,iBAAhB,IACHA,WAAW,KAAK,eADb,IAEHI,cAAc,CAACrB,KAAD,CAFlB;AAGA;;;AAGD,IAAIsB,YAAY,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA1D;AACA,IAAIC,kBAAkB,GAAGH,YAAY,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAAH,GAAiC,MAAtE;;AAEA,SAASH,cAAT,CAAwBrB,KAAxB,EAA+B;AAC9B,SAAOA,KAAK,CAAC0B,QAAN,KAAmBD,kBAA1B;AACA;;AAED,SAASE,WAAT,CAAqBC,GAArB,EAA0B;AACzB,SAAO/C,KAAK,CAACC,OAAN,CAAc8C,GAAd,IAAqB,EAArB,GAA0B,EAAjC;AACA;;AAED,SAASC,6BAAT,CAAuC7B,KAAvC,EAA8CpB,OAA9C,EAAuD;AACtD,SAAQA,OAAO,CAACkD,KAAR,KAAkB,KAAlB,IAA2BlD,OAAO,CAACkC,iBAAR,CAA0Bd,KAA1B,CAA5B,GACJ+B,SAAS,CAACJ,WAAW,CAAC3B,KAAD,CAAZ,EAAqBA,KAArB,EAA4BpB,OAA5B,CADL,GAEJoB,KAFH;AAGA;;AAED,SAASgC,iBAAT,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CtD,OAA3C,EAAoD;AACnD,SAAOqD,MAAM,CAACE,MAAP,CAAcD,MAAd,EAAsB9C,GAAtB,CAA0B,UAASgD,OAAT,EAAkB;AAClD,WAAOP,6BAA6B,CAACO,OAAD,EAAUxD,OAAV,CAApC;AACA,GAFM,CAAP;AAGA;;AAED,SAASyD,gBAAT,CAA0B/B,GAA1B,EAA+B1B,OAA/B,EAAwC;AACvC,MAAI,CAACA,OAAO,CAAC0D,WAAb,EAA0B;AACzB,WAAOP,SAAP;AACA;;AACD,MAAIO,WAAW,GAAG1D,OAAO,CAAC0D,WAAR,CAAoBhC,GAApB,CAAlB;AACA,SAAO,OAAOgC,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkDP,SAAzD;AACA;;AAED,SAASQ,+BAAT,CAAyCN,MAAzC,EAAiD;AAChD,SAAOf,MAAM,CAACsB,qBAAP,GACJtB,MAAM,CAACsB,qBAAP,CAA6BP,MAA7B,EAAqC3C,MAArC,CAA4C,UAASmD,MAAT,EAAiB;AAC9D,WAAOR,MAAM,CAACS,oBAAP,CAA4BD,MAA5B,CAAP;AACA,GAFC,CADI,GAIJ,EAJH;AAKA;;AAED,SAASE,OAAT,CAAiBV,MAAjB,EAAyB;AACxB,SAAOf,MAAM,CAAC0B,IAAP,CAAYX,MAAZ,EAAoBE,MAApB,CAA2BI,+BAA+B,CAACN,MAAD,CAA1D,CAAP;AACA;;AAED,SAASY,kBAAT,CAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAC7C,MAAI;AACH,WAAOA,QAAQ,IAAID,MAAnB;AACA,GAFD,CAEE,OAAMpD,CAAN,EAAS;AACV,WAAO,KAAP;AACA;AACD;;;AAGD,SAASsD,gBAAT,CAA0Bf,MAA1B,EAAkC3B,GAAlC,EAAuC;AACtC,SAAOuC,kBAAkB,CAACZ,MAAD,EAAS3B,GAAT,CAAlB;AAAA,KACH,EAAEY,MAAM,CAAC+B,cAAP,CAAsB7B,IAAtB,CAA2Ba,MAA3B,EAAmC3B,GAAnC;AAAA,KACDY,MAAM,CAACwB,oBAAP,CAA4BtB,IAA5B,CAAiCa,MAAjC,EAAyC3B,GAAzC,CADD,CADJ,CADsC;AAItC;;AAED,SAAS4C,WAAT,CAAqBjB,MAArB,EAA6BC,MAA7B,EAAqCtD,OAArC,EAA8C;AAC7C,MAAIuE,WAAW,GAAG,EAAlB;;AACA,MAAIvE,OAAO,CAACkC,iBAAR,CAA0BmB,MAA1B,CAAJ,EAAuC;AACtCU,IAAAA,OAAO,CAACV,MAAD,CAAP,CAAgBmB,OAAhB,CAAwB,UAAS9C,GAAT,EAAc;AACrC6C,MAAAA,WAAW,CAAC7C,GAAD,CAAX,GAAmBuB,6BAA6B,CAACI,MAAM,CAAC3B,GAAD,CAAP,EAAc1B,OAAd,CAAhD;AACA,KAFD;AAGA;;AACD+D,EAAAA,OAAO,CAACT,MAAD,CAAP,CAAgBkB,OAAhB,CAAwB,UAAS9C,GAAT,EAAc;AACrC,QAAI0C,gBAAgB,CAACf,MAAD,EAAS3B,GAAT,CAApB,EAAmC;AAClC;AACA;;AAED,QAAIuC,kBAAkB,CAACZ,MAAD,EAAS3B,GAAT,CAAlB,IAAmC1B,OAAO,CAACkC,iBAAR,CAA0BoB,MAAM,CAAC5B,GAAD,CAAhC,CAAvC,EAA+E;AAC9E6C,MAAAA,WAAW,CAAC7C,GAAD,CAAX,GAAmB+B,gBAAgB,CAAC/B,GAAD,EAAM1B,OAAN,CAAhB,CAA+BqD,MAAM,CAAC3B,GAAD,CAArC,EAA4C4B,MAAM,CAAC5B,GAAD,CAAlD,EAAyD1B,OAAzD,CAAnB;AACA,KAFD,MAEO;AACNuE,MAAAA,WAAW,CAAC7C,GAAD,CAAX,GAAmBuB,6BAA6B,CAACK,MAAM,CAAC5B,GAAD,CAAP,EAAc1B,OAAd,CAAhD;AACA;AACD,GAVD;AAWA,SAAOuE,WAAP;AACA;;AAED,SAASpB,SAAT,CAAmBE,MAAnB,EAA2BC,MAA3B,EAAmCtD,OAAnC,EAA4C;AAC3CA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,EAAAA,OAAO,CAACyE,UAAR,GAAqBzE,OAAO,CAACyE,UAAR,IAAsBrB,iBAA3C;AACApD,EAAAA,OAAO,CAACkC,iBAAR,GAA4BlC,OAAO,CAACkC,iBAAR,IAA6BA,iBAAzD,CAH2C;AAK3C;;AACAlC,EAAAA,OAAO,CAACiD,6BAAR,GAAwCA,6BAAxC;AAEA,MAAIyB,aAAa,GAAGzE,KAAK,CAACC,OAAN,CAAcoD,MAAd,CAApB;AACA,MAAIqB,aAAa,GAAG1E,KAAK,CAACC,OAAN,CAAcmD,MAAd,CAApB;AACA,MAAIuB,yBAAyB,GAAGF,aAAa,KAAKC,aAAlD;;AAEA,MAAI,CAACC,yBAAL,EAAgC;AAC/B,WAAO3B,6BAA6B,CAACK,MAAD,EAAStD,OAAT,CAApC;AACA,GAFD,MAEO,IAAI0E,aAAJ,EAAmB;AACzB,WAAO1E,OAAO,CAACyE,UAAR,CAAmBpB,MAAnB,EAA2BC,MAA3B,EAAmCtD,OAAnC,CAAP;AACA,GAFM,MAEA;AACN,WAAOsE,WAAW,CAACjB,MAAD,EAASC,MAAT,EAAiBtD,OAAjB,CAAlB;AACA;AACD;;AAEDmD,SAAS,CAAC0B,GAAV,GAAgB,SAASC,YAAT,CAAsBC,KAAtB,EAA6B/E,OAA7B,EAAsC;AACrD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAc6E,KAAd,CAAL,EAA2B;AAC1B,UAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACA;;AAED,SAAOD,KAAK,CAACE,MAAN,CAAa,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACxC,WAAOhC,SAAS,CAAC+B,IAAD,EAAOC,IAAP,EAAanF,OAAb,CAAhB;AACA,GAFM,EAEJ,EAFI,CAAP;AAGA,CARD;;AAUA,IAAIoF,WAAW,GAAGjC,SAAlB;AAEAlC,OAAA,GAAiBmE,WAAjB;;AClIe,MAAMC,eAAN,CAAsB;AACjCC,EAAAA,WAAW,CAAC7D,KAAD,EAAQ8D,UAAU,GAAG,EAArB,EAAyBC,SAAS,GAAG,IAArC,EAA2C;AAClD,SAAK/D,KAAL,GAAaA,KAAb;AACA,SAAK8D,UAAL,GAAkBA,UAAlB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAEDC,EAAAA,aAAa,CAACC,MAAD,EAASC,YAAY,GAAG,EAAxB,EAA4B;AACrC,QAAI,CAAC,KAAKlE,KAAL,CAAWmE,aAAZ,IAA6BF,MAAM,CAACG,GAAP,CAAW,KAAKpE,KAAhB,CAAjC,EAAyD;AACrD,UAAI,CAAC,KAAK+D,SAAV,EAAqB;AACjB;AACH;;AAED,YAAMM,IAAI,GAAGJ,MAAM,CAAC,KAAKjE,KAAL,CAAWG,SAAX,CAAqBC,KAAtB,CAAnB;AAEA6D,MAAAA,MAAM,CAACK,MAAP,CAAcD,IAAd;AACH;;AAED,UAAME,KAAK,GAAGC,GAAK,CAAC,KAAKV,UAAN,EAAkBI,YAAlB,CAAnB;AAEAD,IAAAA,MAAM,CAACQ,GAAP,CAAW,KAAKzE,KAAhB,EAAuBuE,KAAvB;AACH;;AArBgC;;ACFtB,MAAMG,MAAN,CAAa;AAKxBb,EAAAA,WAAW,CAAC3D,IAAD,EAAO;AAAA,kCAJX,EAIW;;AAAA,qCAHR,EAGQ;;AAAA,wCAFL,EAEK;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEDyE,EAAAA,YAAY,CAACC,eAAD,EAAkB;AAC1B,SAAKC,UAAL,CAAgBC,IAAhB,CAAqBF,eAArB;AACH;;AAEDZ,EAAAA,aAAa,CAACC,MAAD,EAASc,WAAW,GAAG,EAAvB,EAA2B;AACpC,SAAKC,OAAL,CAAajC,OAAb,CAAsBkC,MAAD,IAAY;AAC7BA,MAAAA,MAAM,CAACjB,aAAP,CAAqBC,MAArB,EAA6Bc,WAA7B;AACH,KAFD;AAIA,UAAMG,QAAQ,GAAG,EAAjB;AAEA,SAAKL,UAAL,CAAgB9B,OAAhB,CAAyBoC,SAAD,IAAe;AACnC,YAAMnF,KAAK,GAAGmF,SAAS,CAACnF,KAAxB;AACA,YAAMoF,IAAI,GAAGpF,KAAK,CAACG,SAAN,CAAgBC,KAA7B;AAEA,UAAIiF,gBAAgB,GAAG,EAAvB;;AAEA,UAAIrF,KAAK,CAACmE,aAAV,EAAyB;AACrB,YAAInE,KAAK,CAACsF,WAAV,EAAuB;AACnB,gBAAMrF,GAAG,GAAGkF,SAAS,CAACrB,UAAV,CAAqB9D,KAAK,CAACsF,WAA3B,CAAZ;;AAEA,cAAIP,WAAW,CAACK,IAAD,CAAX,IAAqBL,WAAW,CAACK,IAAD,CAAX,CAAkBnF,GAAlB,CAAzB,EAAiD;AAC7CoF,YAAAA,gBAAgB,GAAGN,WAAW,CAACK,IAAD,CAAX,CAAkBnF,GAAlB,CAAnB;AACH;AACJ,SAND,MAMO;AACH,cAAI,CAACiF,QAAQ,CAACE,IAAD,CAAb,EAAqB;AACjBF,YAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiB,CAAjB;AACH;;AAED,cACIL,WAAW,CAACK,IAAD,CAAX,IACAL,WAAW,CAACK,IAAD,CAAX,CAAkBF,QAAQ,CAACE,IAAD,CAA1B,CAFJ,EAGE;AACEC,YAAAA,gBAAgB,GAAGN,WAAW,CAACK,IAAD,CAAX,CAAkBF,QAAQ,CAACE,IAAD,CAA1B,CAAnB;AACH;;AAEDF,UAAAA,QAAQ,CAACE,IAAD,CAAR;AACH;AACJ,OArBD,MAqBO;AACHC,QAAAA,gBAAgB,GAAGN,WAAW,CAACK,IAAD,CAA9B;AACH;;AAEDD,MAAAA,SAAS,CAACnB,aAAV,CAAwBC,MAAxB,EAAgCoB,gBAAhC;AACH,KAhCD;AAkCA,WAAOpB,MAAP;AACH;;AAvDuB;;ACIrB,MAAMsB,cAAN,CAAqB;AAIxB1B,EAAAA,WAAW,CAAC2B,MAAD,EAAS;AAAA,sCAHT,EAGS;;AAAA,qCAFV,IAEU;;AAChB,SAAKC,OAAL,GAAeD,MAAf;AACH;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMC,UAAU,GAAG,KAAKpF,GAAL,CAASmF,IAAI,CAACzF,IAAd,CAAnB;;AAEA,QAAI0F,UAAJ,EAAgB;AACZ,aAAOA,UAAP;AACH;;AAED,UAAMC,MAAM,GAAG,IAAInB,MAAJ,CAAWiB,IAAI,CAACzF,IAAhB,CAAf;AAEA,QAAI8E,OAAJ;;AAEA,QAAIxG,KAAK,CAACC,OAAN,CAAckH,IAAI,CAACX,OAAnB,CAAJ,EAAiC;AAC7BA,MAAAA,OAAO,GAAGW,IAAI,CAACX,OAAf;AACH,KAFD,MAEO,IAAI,OAAOW,IAAI,CAACX,OAAZ,KAAwB,QAA5B,EAAsC;AACzCA,MAAAA,OAAO,GAAG,CAACW,IAAI,CAACX,OAAN,CAAV;AACH,KAFM,MAEA;AACHA,MAAAA,OAAO,GAAG,EAAV;AACH;;AAEDa,IAAAA,MAAM,CAACb,OAAP,GAAiBA,OAAO,CAACjG,GAAR,CAAakG,MAAD,IAAY;AACrC,YAAMa,GAAG,GAAG,KAAKtF,GAAL,CAASyE,MAAT,CAAZ;;AAEA,UAAI,CAACa,GAAL,EAAU;AACNC,QAAAA,OAAO,CAACC,IAAR,CACK,WAAUL,IAAI,CAACzF,IAAK,iCAAgC+E,MAAO,iFADhE;AAGA,eAAOA,MAAP;AACH;;AAED,aAAOa,GAAP;AACH,KAXgB,CAAjB;AAaA,UAAMG,KAAK,GAAGN,IAAI,CAACd,UAAL,IAAmB,EAAjC;AAEAoB,IAAAA,KAAK,CAAClD,OAAN,CAAemD,aAAD,IAAmB;AAC7B,UAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;AACnC,cAAMd,IAAI,GAAG1F,WAAW,CAACwG,aAAD,CAAxB;;AACA,cAAMlG,KAAK,GAAG,KAAKyF,OAAL,CAAaU,WAAb,CAAyB3F,GAAzB,CAA6B4E,IAA7B,CAAd;;AAEA,YAAIpF,KAAJ,EAAW;AACP6F,UAAAA,MAAM,CAAClB,YAAP,CAAoB,IAAIf,eAAJ,CAAoB5D,KAApB,CAApB;AAEA;AACH;AACJ;;AAED,UAAI,OAAOkG,aAAP,KAAyB,QAA7B,EAAuC;AACnC,cAAMd,IAAI,GAAG1F,WAAW,CAACwG,aAAa,CAACE,IAAf,CAAxB;;AACA,cAAMpG,KAAK,GAAG,KAAKyF,OAAL,CAAaU,WAAb,CAAyB3F,GAAzB,CAA6B4E,IAA7B,CAAd;;AAEA,YAAIpF,KAAJ,EAAW;AACP6F,UAAAA,MAAM,CAAClB,YAAP,CACI,IAAIf,eAAJ,CACI5D,KADJ,EAEIkG,aAAa,CAACpC,UAFlB,EAGIoC,aAAa,CAACnC,SAHlB,CADJ;AAQA;AACH;AACJ;;AAEDgC,MAAAA,OAAO,CAACC,IAAR,CACK,qCAAoCE,aAAc,gBAAeP,IAAI,CAACzF,IAAK,0DADhF;AAGH,KAhCD;AAkCA,WAAO2F,MAAP;AACH;;AAED9F,EAAAA,QAAQ,CAAC4F,IAAD,EAAO;AACX,UAAME,MAAM,GAAG,KAAKH,WAAL,CAAiBC,IAAjB,CAAf;AAEA,SAAKU,QAAL,CAAcR,MAAM,CAAC3F,IAArB,IAA6B2F,MAA7B;AACH;;AAEDrF,EAAAA,GAAG,CAACN,IAAD,EAAO;AACN,WAAO,KAAKmG,QAAL,CAAcnG,IAAd,CAAP;AACH;;AAEDoG,EAAAA,MAAM,CAACC,KAAD,EAAQrG,IAAR,EAAc4D,UAAU,GAAG,EAA3B,EAA+B;AACjC,UAAM+B,MAAM,GAAG,KAAKrF,GAAL,CAASN,IAAT,CAAf;;AAEA,QAAI,CAAC2F,MAAL,EAAa;AACTE,MAAAA,OAAO,CAACC,IAAR,CACK,iCAAgC9F,IAAK,8BAD1C;AAIA;AACH;;AAED,UAAM+D,MAAM,GAAGsC,KAAK,CAACC,YAAN,EAAf;AAEAvC,IAAAA,MAAM,CAACwC,UAAP,GAAoB,KAApB;AAEAZ,IAAAA,MAAM,CAAC7B,aAAP,CAAqBC,MAArB,EAA6BH,UAA7B;AAEAG,IAAAA,MAAM,CAACwC,UAAP,GAAoB,IAApB;;AACAxC,IAAAA,MAAM,CAACyC,UAAP;;AAEA,WAAOzC,MAAP;AACH;;AA9GuB;;ACJrB,MAAM0C,SAAN,CAAgB;AAKnB,MAAIJ,KAAJ,GAAY;AACR,WAAO,KAAKtC,MAAL,CAAYsC,KAAnB;AACH;;AAED,MAAIpC,aAAJ,GAAoB;AAChB,WAAO,KAAKN,WAAL,CAAiBM,aAAxB;AACH;;AAED,MAAImB,WAAJ,GAAkB;AACd,WAAO,KAAKzB,WAAL,CAAiByB,WAAxB;AACH;;AAEDzB,EAAAA,WAAW,CAACC,UAAU,GAAG,EAAd,EAAkB;AACzBjD,IAAAA,MAAM,CAAC+F,MAAP,CAAc,IAAd,EAAoB,KAAK/C,WAAL,CAAiBC,UAArC,EAAiDA,UAAjD;AACH;;AAED+C,EAAAA,OAAO,GAAG;AACN,SAAK5C,MAAL,CAAYK,MAAZ,CAAmB,IAAnB;AACH;;AAEDwC,EAAAA,YAAY,GAAG;AACX,SAAKC,WAAL;AACA,WAAO,KAAK9C,MAAZ;AACH;;AAED+C,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACV,SAAKC,OAAL,CAAaD,GAAb;;AAEA,QAAI,OAAO,KAAKA,GAAG,CAACE,WAAT,CAAP,KAAiC,UAArC,EAAiD;AAC7C,WAAKF,GAAG,CAACE,WAAT,EAAsBF,GAAtB;AACH;AACJ;;AAEDG,EAAAA,WAAW,CAACnD,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKoD,UAAL,CAAgBpD,MAAhB;AACH;;AAEDqD,EAAAA,SAAS,GAAG;AACR,UAAMC,EAAE,GAAG,EAAX;;AAEA,SAAK,MAAMtH,GAAX,IAAkB,KAAK4D,WAAL,CAAiBC,UAAnC,EAA+C;AAC3CyD,MAAAA,EAAE,CAACtH,GAAD,CAAF,GAAU,KAAKA,GAAL,CAAV;AACH;;AAED,WAAOsH,EAAP;AACH;;AAEDF,EAAAA,UAAU,CAACpD,MAAD,EAAS;;AACnB8C,EAAAA,WAAW,GAAG;;AACdG,EAAAA,OAAO,CAACD,GAAD,EAAM;;AAvDM;;gBAAVN,4BACc;;gBADdA,0BAEY;;gBAFZA,yBAGW;;ACDjB,MAAMa,WAAN,CAAkB;AAKrB3D,EAAAA,WAAW,CAAC3D,IAAD,EAAOyF,IAAI,GAAG,EAAd,EAAkB;AAAA,kCAJtB,EAIsB;;AAAA,uCAHjB,KAGiB;;AAAA,qCAFnB,KAEmB;;AACzB,SAAKzF,IAAL,GAAYA,IAAZ;AACA,SAAKyF,IAAL,GAAYA,IAAZ;AACA,SAAKwB,WAAL,GAAmBzH,WAAW,CAAE,MAAK,KAAKQ,IAAK,EAAjB,CAA9B;AACH;;AAEDuH,EAAAA,EAAE,CAACvH,IAAD,EAAO;AACL,WAAO,KAAKA,IAAL,KAAcA,IAArB;AACH;;AAEDwH,EAAAA,MAAM,GAAG;AACL,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,SAAKD,SAAL,GAAiB,IAAjB;AACH;;AAtBoB;;ACFzB,MAAME,GAAG,GAAG,EAAZ;AAEO,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrC,SAAOD,GAAG,GAAG,EAAE,MAAMC,GAAR,CAAb;AACH,CAFM;AAIA,MAAMC,MAAM,GAAG,CAACF,GAAD,EAAMC,GAAN,KAAc;AAChC,SAAOD,GAAG,GAAIF,GAAG,IAAIG,GAArB;AACH,CAFM;AAIA,MAAME,MAAM,GAAG,CAACH,GAAD,EAAMC,GAAN,KAAc;AAChC,SAAO,CAACD,GAAG,IAAIC,GAAR,IAAe,EAAf,KAAsB,EAA7B;AACH,CAFM;AAIA,MAAMG,eAAe,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACvC,SAAOD,EAAE,GAAGC,EAAZ;AACH,CAFM;;ACVP,MAAMC,eAAe,GAAG,CAACtE,MAAD,EAASkB,SAAT,KAAuB;AAC3C,QAAMlF,GAAG,GAAGkF,SAAS,CAAC/E,KAAtB;AAEA6D,EAAAA,MAAM,CAAChE,GAAD,CAAN,GAAckF,SAAd;AACAlB,EAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,IAAyBkF,SAAzB;AACH,CALD;;AAOA,MAAMqD,oBAAoB,GAAG,CAACvE,MAAD,EAASkB,SAAT,KAAuB;AAChD,QAAMlF,GAAG,GAAGkF,SAAS,CAAC/E,KAAtB;;AAEA,MAAI,CAAC6D,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,CAAL,EAA6B;AACzBgE,IAAAA,MAAM,CAAChE,GAAD,CAAN,GAAc,EAAd;AACAgE,IAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,IAAyB,EAAzB;AACH;;AAEDgE,EAAAA,MAAM,CAAChE,GAAD,CAAN,CAAYkF,SAAS,CAACA,SAAS,CAACG,WAAX,CAArB,IAAgDH,SAAhD;AACAlB,EAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,EAAuBkF,SAAS,CAACA,SAAS,CAACG,WAAX,CAAhC,IAA2DH,SAA3D;AACH,CAVD;;AAYA,MAAMsD,oBAAoB,GAAG,CAACxE,MAAD,EAASkB,SAAT,KAAuB;AAChD,QAAMlF,GAAG,GAAGkF,SAAS,CAAC/E,KAAtB;;AAEA,MAAI,CAAC6D,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,CAAL,EAA6B;AACzBgE,IAAAA,MAAM,CAAChE,GAAD,CAAN,GAAc,EAAd;AACAgE,IAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,IAAyB,EAAzB;AACH;;AAEDgE,EAAAA,MAAM,CAAChE,GAAD,CAAN,CAAY6E,IAAZ,CAAiBK,SAAjB;AACAlB,EAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,EAAuB6E,IAAvB,CAA4BK,SAA5B;AACH,CAVD;;AAYA,MAAMuD,eAAe,GAAG,CAACzE,MAAD,EAASkB,SAAT,KAAuB;AAC3C,QAAMlF,GAAG,GAAGkF,SAAS,CAAChF,SAAV,CAAoBC,KAAhC;AAEA,SAAO6D,MAAM,CAAChE,GAAD,CAAb;AACA,SAAOgE,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,CAAP;AAEAgE,EAAAA,MAAM,CAAC0E,MAAP,GAAgBZ,WAAW,CAAC9D,MAAM,CAAC0E,MAAR,EAAgBxD,SAAS,CAAC9E,KAA1B,CAA3B;;AACA4D,EAAAA,MAAM,CAACyC,UAAP;AACH,CARD;;AAUA,MAAMkC,oBAAoB,GAAG,CAAC3E,MAAD,EAASkB,SAAT,KAAuB;AAChD,QAAMlF,GAAG,GAAGkF,SAAS,CAAC/E,KAAtB;AACA,QAAMyI,OAAO,GAAG1D,SAAS,CAACA,SAAS,CAACG,WAAX,CAAzB;AAEA,SAAOrB,MAAM,CAAChE,GAAD,CAAN,CAAY4I,OAAZ,CAAP;AACA,SAAO5E,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,EAAuB4I,OAAvB,CAAP;;AAEA,MAAIhI,MAAM,CAAC0B,IAAP,CAAY0B,MAAM,CAAChE,GAAD,CAAlB,EAAyBlC,MAAzB,IAAmC,CAAvC,EAA0C;AACtC,WAAOkG,MAAM,CAAChE,GAAD,CAAb;AACA,WAAOgE,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,CAAP;AACAgE,IAAAA,MAAM,CAAC0E,MAAP,GAAgBZ,WAAW,CAAC9D,MAAM,CAAC0E,MAAR,EAAgBxD,SAAS,CAAC9E,KAA1B,CAA3B;;AACA4D,IAAAA,MAAM,CAACyC,UAAP;AACH;AACJ,CAbD;;AAeA,MAAMoC,oBAAoB,GAAG,CAAC7E,MAAD,EAASkB,SAAT,KAAuB;AAChD,QAAMlF,GAAG,GAAGkF,SAAS,CAAC/E,KAAtB;AACA,QAAM2I,GAAG,GAAG9E,MAAM,CAAChE,GAAD,CAAN,CAAY+I,OAAZ,CAAoB7D,SAApB,CAAZ;AAEAlB,EAAAA,MAAM,CAAChE,GAAD,CAAN,CAAYgJ,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB;AACA9E,EAAAA,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,EAAuBgJ,MAAvB,CAA8BF,GAA9B,EAAmC,CAAnC;;AAEA,MAAI9E,MAAM,CAAChE,GAAD,CAAN,CAAYlC,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,WAAOkG,MAAM,CAAChE,GAAD,CAAb;AACA,WAAOgE,MAAM,CAACY,UAAP,CAAkB5E,GAAlB,CAAP;AACAgE,IAAAA,MAAM,CAAC0E,MAAP,GAAgBZ,WAAW,CAAC9D,MAAM,CAAC0E,MAAR,EAAgBxD,SAAS,CAAC9E,KAA1B,CAA3B;;AACA4D,IAAAA,MAAM,CAACyC,UAAP;AACH;AACJ,CAbD;;AAeA,MAAMwC,kBAAkB,GAAI/D,SAAD,IAAe;AACtC,SAAOA,SAAS,CAACmC,SAAV,EAAP;AACH,CAFD;;AAIA,MAAM6B,uBAAuB,GAAIC,GAAD,IAAS;AACrC,SAAOA,GAAG,CAACrK,GAAJ,CAAQmK,kBAAR,CAAP;AACH,CAFD;;AAIA,MAAMG,uBAAuB,GAAI9B,EAAD,IAAQ;AACpC,QAAM+B,GAAG,GAAG,EAAZ;;AAEA,OAAK,MAAMC,CAAX,IAAgBhC,EAAhB,EAAoB;AAChB+B,IAAAA,GAAG,CAACC,CAAD,CAAH,GAASL,kBAAkB,CAAC3B,EAAE,CAACgC,CAAD,CAAH,CAA3B;AACH;;AAED,SAAOD,GAAP;AACH,CARD;;AAUO,MAAME,MAAN,CAAa;AAIhB3F,EAAAA,WAAW,CAAC0C,KAAD,EAAQkD,EAAR,EAAY;AAAA,oCAHd,EAGc;;AAAA,wCAFV,IAEU;;AACnB,SAAKlD,KAAL,GAAaA,KAAb;AACA,SAAKkD,EAAL,GAAUA,EAAV;AACA,SAAK5E,UAAL,GAAkB,EAAlB;AACA,SAAK6E,WAAL,GAAmB,KAAnB;AACH;;AAEDhD,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKD,UAAT,EAAqB;AACjB,WAAKF,KAAL,CAAWoD,UAAX,CAAsB,IAAtB;AACH;AACJ;;AAEDlF,EAAAA,GAAG,CAACzE,KAAD,EAAQ8D,UAAR,EAAoB;AACnB,UAAMqB,SAAS,GAAG,IAAInF,KAAJ,CAAU8D,UAAV,CAAlB;;AAEA,QAAIqB,SAAS,CAACG,WAAd,EAA2B;AACvBkD,MAAAA,oBAAoB,CAAC,IAAD,EAAOrD,SAAP,CAApB;AACH,KAFD,MAEO,IAAIA,SAAS,CAAChB,aAAd,EAA6B;AAChCsE,MAAAA,oBAAoB,CAAC,IAAD,EAAOtD,SAAP,CAApB;AACH,KAFM,MAEA;AACHoD,MAAAA,eAAe,CAAC,IAAD,EAAOpD,SAAP,CAAf;AACH;;AAED,SAAKwD,MAAL,GAAcT,MAAM,CAAC,KAAKS,MAAN,EAAcxD,SAAS,CAAC9E,KAAxB,CAApB;;AACA8E,IAAAA,SAAS,CAACiC,WAAV,CAAsB,IAAtB;;AAEA,SAAKV,UAAL;AACH;;AAEDtC,EAAAA,GAAG,CAACpE,KAAD,EAAQ;AACP,WAAOmI,MAAM,CAAC,KAAKQ,MAAN,EAAc3I,KAAK,CAACG,SAAN,CAAgBE,KAA9B,CAAb;AACH;;AAEDiE,EAAAA,MAAM,CAACa,SAAD,EAAY;AACd,QAAIA,SAAS,CAACG,WAAd,EAA2B;AACvBsD,MAAAA,oBAAoB,CAAC,IAAD,EAAOzD,SAAP,CAApB;AACH,KAFD,MAEO,IAAIA,SAAS,CAAChB,aAAd,EAA6B;AAChC2E,MAAAA,oBAAoB,CAAC,IAAD,EAAO3D,SAAP,CAApB;AACH,KAFM,MAEA;AACHuD,MAAAA,eAAe,CAAC,IAAD,EAAOvD,SAAP,CAAf;AACH;;AAEDA,IAAAA,SAAS,CAAC2B,YAAV;AACH;;AAEDD,EAAAA,OAAO,GAAG;AACN,SAAK,MAAM0C,CAAX,IAAgB,KAAK1E,UAArB,EAAiC;AAC7B,YAAM+E,CAAC,GAAG,KAAK/E,UAAL,CAAgB0E,CAAhB,CAAV;;AAEA,UAAIK,CAAC,YAAYjD,SAAjB,EAA4B;AACxB,aAAKgC,MAAL,GAAcZ,WAAW,CAAC,KAAKY,MAAN,EAAciB,CAAC,CAACvJ,KAAhB,CAAzB;;AACAuJ,QAAAA,CAAC,CAAC9C,YAAF;AACH,OAHD,MAGO,IAAI8C,CAAC,YAAYpL,KAAjB,EAAwB;AAC3B,aAAK,MAAM2G,SAAX,IAAwByE,CAAxB,EAA2B;AACvB,eAAKjB,MAAL,GAAcZ,WAAW,CAAC,KAAKY,MAAN,EAAcxD,SAAS,CAAC9E,KAAxB,CAAzB;;AACA8E,UAAAA,SAAS,CAAC2B,YAAV;AACH;AACJ,OALM,MAKA;AACH,aAAK,MAAM3B,SAAX,IAAwBtE,MAAM,CAACgJ,MAAP,CAAcD,CAAd,CAAxB,EAA0C;AACtC,eAAKjB,MAAL,GAAcZ,WAAW,CAAC,KAAKY,MAAN,EAAcxD,SAAS,CAAC9E,KAAxB,CAAzB;;AACA8E,UAAAA,SAAS,CAAC2B,YAAV;AACH;AACJ;;AAED,aAAO,KAAKyC,CAAL,CAAP;AACA,aAAO,KAAK1E,UAAL,CAAgB0E,CAAhB,CAAP;AACH;;AAED,SAAK7C,UAAL;;AACA,SAAKH,KAAL,CAAWuD,UAAX,CAAsB,KAAKL,EAA3B;;AACA,SAAK5E,UAAL,GAAkB,EAAlB;AACA,SAAK6E,WAAL,GAAmB,IAAnB;AACH;;AAEDpC,EAAAA,SAAS,GAAG;AACR,UAAMzC,UAAU,GAAG,EAAnB;;AAEA,SAAK,MAAM0E,CAAX,IAAgB,KAAK1E,UAArB,EAAiC;AAC7B,YAAM+E,CAAC,GAAG,KAAK/E,UAAL,CAAgB0E,CAAhB,CAAV;;AAEA,UAAIK,CAAC,YAAYjD,SAAjB,EAA4B;AACxB9B,QAAAA,UAAU,CAAC0E,CAAD,CAAV,GAAgBL,kBAAkB,CAACU,CAAD,CAAlC;AACH,OAFD,MAEO,IAAIA,CAAC,YAAYpL,KAAjB,EAAwB;AAC3BqG,QAAAA,UAAU,CAAC0E,CAAD,CAAV,GAAgBJ,uBAAuB,CAACS,CAAD,CAAvC;AACH,OAFM,MAEA;AACH/E,QAAAA,UAAU,CAAC0E,CAAD,CAAV,GAAgBF,uBAAuB,CAACO,CAAD,CAAvC;AACH;AACJ;;AAED,WAAO;AACHH,MAAAA,EAAE,EAAE,KAAKA,EADN;AAEH,SAAG5E;AAFA,KAAP;AAIH;;AAEDkF,EAAAA,SAAS,CAAC7J,IAAD,EAAOyF,IAAP,EAAa;AAClB,UAAMsB,GAAG,GAAG,IAAIO,WAAJ,CAAgBtH,IAAhB,EAAsByF,IAAtB,CAAZ;;AAEA,SAAK,MAAM1F,GAAX,IAAkB,KAAK4E,UAAvB,EAAmC;AAC/B,YAAM+E,CAAC,GAAG,KAAK/E,UAAL,CAAgB5E,GAAhB,CAAV;;AAEA,UAAI2J,CAAC,YAAYjD,SAAjB,EAA4B;AACxBiD,QAAAA,CAAC,CAAC5C,QAAF,CAAWC,GAAX;;AAEA,YAAIA,GAAG,CAACW,SAAR,EAAmB;AACf,iBAAOX,GAAP;AACH;AACJ,OAND,MAMO,IAAI2C,CAAC,YAAYpL,KAAjB,EAAwB;AAC3B,aAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8L,CAAC,CAAC7L,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B8L,UAAAA,CAAC,CAAC9L,CAAD,CAAD,CAAKkJ,QAAL,CAAcC,GAAd;;AAEA,cAAIA,GAAG,CAACW,SAAR,EAAmB;AACf,mBAAOX,GAAP;AACH;AACJ;AACJ,OARM,MAQA;AACH,aAAK,MAAM9B,SAAX,IAAwBtE,MAAM,CAACgJ,MAAP,CAAcD,CAAd,CAAxB,EAA0C;AACtCzE,UAAAA,SAAS,CAAC6B,QAAV,CAAmBC,GAAnB;;AAEA,cAAIA,GAAG,CAACW,SAAR,EAAmB;AACf,mBAAOX,GAAP;AACH;AACJ;AACJ;AACJ;;AAED,WAAOA,GAAP;AACH;;AApIe;;AC3Fb,MAAM+C,KAAN,CAAY;AAKfnG,EAAAA,WAAW,CAAC0C,KAAD,EAAQ0D,OAAR,EAAiB;AAAA,oCAJnB,EAImB;;AAAA,6CAHV,EAGU;;AAAA,gDAFP,EAEO;;AACxB,SAAKC,MAAL,GAAc3D,KAAd;AAEA,UAAM4D,GAAG,GAAGF,OAAO,CAACE,GAAR,IAAe,EAA3B;AACA,UAAM/G,GAAG,GAAG6G,OAAO,CAAC7G,GAAR,IAAe,EAA3B;AACA,UAAMgH,IAAI,GAAGH,OAAO,CAACG,IAAR,IAAgB,EAA7B;AAEA,SAAKC,IAAL,GAAYF,GAAG,CAAC3G,MAAJ,CAAW,CAAC8G,CAAD,EAAIC,CAAJ,KAAU;AAC7B,aAAOrC,MAAM,CAACoC,CAAD,EAAIC,CAAC,CAACpK,SAAF,CAAYE,KAAhB,CAAb;AACH,KAFW,EAET,EAFS,CAAZ;AAIA,SAAKmK,IAAL,GAAYpH,GAAG,CAACI,MAAJ,CAAW,CAAC8G,CAAD,EAAIC,CAAJ,KAAU;AAC7B,aAAOrC,MAAM,CAACoC,CAAD,EAAIC,CAAC,CAACpK,SAAF,CAAYE,KAAhB,CAAb;AACH,KAFW,EAET,EAFS,CAAZ;AAIA,SAAKoK,KAAL,GAAaL,IAAI,CAAC5G,MAAL,CAAY,CAAC8G,CAAD,EAAIC,CAAJ,KAAU;AAC/B,aAAOrC,MAAM,CAACoC,CAAD,EAAIC,CAAC,CAACpK,SAAF,CAAYE,KAAhB,CAAb;AACH,KAFY,EAEV,EAFU,CAAb;AAIA,SAAKqK,OAAL;AACH;;AAEDC,EAAAA,aAAa,CAACC,EAAD,EAAK;AACd,SAAKC,eAAL,CAAqB/F,IAArB,CAA0B8F,EAA1B;AACH;;AAEDE,EAAAA,eAAe,CAACF,EAAD,EAAK;AAChB,SAAKG,kBAAL,CAAwBjG,IAAxB,CAA6B8F,EAA7B;AACH;;AAEDxG,EAAAA,GAAG,CAACH,MAAD,EAAS;AACR,WAAO,KAAK8E,GAAL,CAAS9E,MAAT,KAAoB,CAA3B;AACH;;AAED8E,EAAAA,GAAG,CAAC9E,MAAD,EAAS;AACR,WAAO,KAAK+G,MAAL,CAAYhC,OAAZ,CAAoB/E,MAApB,CAAP;AACH;;AAEDgH,EAAAA,OAAO,CAAChH,MAAD,EAAS;AACZ,UAAMiH,IAAI,GAAGjH,MAAM,CAAC0E,MAApB;AAEA,UAAMwB,GAAG,GAAG,KAAKE,IAAL,KAAc,EAAd,IAAoBjC,eAAe,CAAC8C,IAAD,EAAO,KAAKb,IAAZ,CAAf,GAAmC,CAAnE;;AACA,UAAMjH,GAAG,GAAGgF,eAAe,CAAC8C,IAAD,EAAO,KAAKV,IAAZ,CAAf,KAAqC,KAAKA,IAAtD;;AACA,UAAMJ,IAAI,GAAGhC,eAAe,CAAC8C,IAAD,EAAO,KAAKT,KAAZ,CAAf,KAAsC,EAAnD;AAEA,WAAON,GAAG,IAAI/G,GAAP,IAAcgH,IAArB;AACH;;AAEDe,EAAAA,SAAS,CAAClH,MAAD,EAAS;AACd,UAAM8E,GAAG,GAAG,KAAKA,GAAL,CAAS9E,MAAT,CAAZ;AACA,UAAMmH,UAAU,GAAGrC,GAAG,IAAI,CAA1B;;AAEA,QAAI,CAAC9E,MAAM,CAACyF,WAAR,IAAuB,KAAKuB,OAAL,CAAahH,MAAb,CAA3B,EAAiD;AAC7C,UAAI,CAACmH,UAAL,EAAiB;AACb,aAAKJ,MAAL,CAAYlG,IAAZ,CAAiBb,MAAjB;;AACA,aAAK4G,eAAL,CAAqB9H,OAArB,CAA8BsI,EAAD,IAAQA,EAAE,CAACpH,MAAD,CAAvC;AACH;;AAED,aAAO,IAAP;AACH;;AAED,QAAImH,UAAJ,EAAgB;AACZ,WAAKJ,MAAL,CAAY/B,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB;;AACA,WAAKgC,kBAAL,CAAwBhI,OAAxB,CAAiCsI,EAAD,IAAQA,EAAE,CAACpH,MAAD,CAA1C;AACH;;AAED,WAAO,KAAP;AACH;;AAEDyG,EAAAA,OAAO,GAAG;AACN,SAAKM,MAAL,GAAc,EAAd;;AACA,SAAKd,MAAL,CAAYoB,SAAZ,CAAsBvI,OAAtB,CAA+BkB,MAAD,IAAY;AACtC,WAAKkH,SAAL,CAAelH,MAAf;AACH,KAFD;AAGH;;AAEDzD,EAAAA,GAAG,GAAG;AACF,WAAO,KAAKwK,MAAZ;AACH;;AAnFc;;ACEZ,MAAMO,KAAN,CAAY;AAKf1H,EAAAA,WAAW,CAAC2B,MAAD,EAAS;AAAA,iCAJd,CAIc;;AAAA,sCAHT,EAGS;;AAAA,uCAFR,IAAIgG,GAAJ,EAEQ;;AAChB,SAAKhG,MAAL,GAAcA,MAAd;AACH;;AAEDiG,EAAAA,QAAQ,GAAG;AACP,WAAO,EAAE,KAAKC,GAAP,GAAaC,IAAI,CAACC,MAAL,GAAc9K,QAAd,CAAuB,EAAvB,EAA2B+K,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAApB;AACH;;AAEDC,EAAAA,SAAS,CAACrC,EAAD,EAAK;AACV,WAAO,KAAK6B,SAAL,CAAe9K,GAAf,CAAmBiJ,EAAnB,CAAP;AACH;;AAEDsC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKT,SAAL,CAAezB,MAAf,EAAP;AACH;;AAEDrD,EAAAA,YAAY,CAACiD,EAAE,GAAG,KAAKgC,QAAL,EAAN,EAAuB;AAC/B,UAAMxH,MAAM,GAAG,IAAIuF,MAAJ,CAAW,IAAX,EAAiBC,EAAjB,CAAf;;AAEA,SAAK6B,SAAL,CAAeU,GAAf,CAAmBvC,EAAnB,EAAuBxF,MAAvB;;AAEA,WAAOA,MAAP;AACH;;AAEDgI,EAAAA,aAAa,CAACxC,EAAD,EAAK;AACd,UAAMxF,MAAM,GAAG,KAAK6H,SAAL,CAAerC,EAAf,CAAf;;AAEA,QAAIxF,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAAC4C,OAAP;AACH;AACJ;;AAEDqF,EAAAA,eAAe,GAAG;AACd,SAAKZ,SAAL,CAAevI,OAAf,CAAwBkB,MAAD,IAAY;AAC/BA,MAAAA,MAAM,CAAC4C,OAAP;AACH,KAFD;AAGH;;AAEDA,EAAAA,OAAO,GAAG;AACN,SAAKqF,eAAL;AACA,SAAKR,GAAL,GAAW,CAAX;AACA,SAAKS,QAAL,GAAgB,EAAhB;AACA,SAAKb,SAAL,GAAiB,IAAIE,GAAJ,EAAjB;AACH;;AAEDY,EAAAA,WAAW,CAACnC,OAAD,EAAU;AACjB,UAAMoC,KAAK,GAAG,IAAIrC,KAAJ,CAAU,IAAV,EAAgBC,OAAhB,CAAd;;AAEA,SAAKkC,QAAL,CAAcrH,IAAd,CAAmBuH,KAAnB;;AAEA,WAAOA,KAAP;AACH;;AAEDC,EAAAA,YAAY,CAACpM,IAAD,EAAO4D,UAAU,GAAG,EAApB,EAAwB;AAChC,WAAO,KAAK0B,MAAL,CAAYa,QAAZ,CAAqBC,MAArB,CAA4B,IAA5B,EAAkCpG,IAAlC,EAAwC4D,UAAxC,CAAP;AACH;;AAEDwD,EAAAA,SAAS,CAACiF,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,IAAI,GAAGF,QAAQ,IAAI,KAAKjB,SAA9B;AAEAmB,IAAAA,IAAI,CAAC1J,OAAL,CAAc2J,CAAD,IAAO;AAChBF,MAAAA,IAAI,CAAC1H,IAAL,CAAU4H,CAAC,CAACpF,SAAF,EAAV;AACH,KAFD;AAIA,WAAO;AACHiF,MAAAA,QAAQ,EAAEC;AADP,KAAP;AAGH;;AAED9G,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAK,MAAMgH,UAAX,IAAyBhH,IAAI,CAAC4G,QAA9B,EAAwC;AACpC,WAAKK,sBAAL,CAA4BD,UAAU,CAAClD,EAAvC;AACH;;AAED,SAAK,MAAMkD,UAAX,IAAyBhH,IAAI,CAAC4G,QAA9B,EAAwC;AACpC,WAAKM,kBAAL,CAAwBF,UAAxB;AACH;AACJ;;AAEDC,EAAAA,sBAAsB,CAACnD,EAAD,EAAK;AACvB,WAAO,KAAKqC,SAAL,CAAerC,EAAf,KAAsB,KAAKjD,YAAL,CAAkBiD,EAAlB,CAA7B;AACH;;AAEDoD,EAAAA,kBAAkB,CAAClH,IAAD,EAAO;AACrB,UAAM;AAAE8D,MAAAA,EAAF;AAAM,SAAG5E;AAAT,QAAwBc,IAA9B;;AACA,UAAM1B,MAAM,GAAG,KAAK2I,sBAAL,CAA4BnD,EAA5B,CAAf;;AACAxF,IAAAA,MAAM,CAACwC,UAAP,GAAoB,KAApB;AAEA5F,IAAAA,MAAM,CAACiM,OAAP,CAAejI,UAAf,EAA2B9B,OAA3B,CAAmC,CAAC,CAAC9C,GAAD,EAAMN,KAAN,CAAD,KAAkB;AACjD,YAAMyG,IAAI,GAAG1G,WAAW,CAACO,GAAD,CAAxB;;AACA,YAAM8M,GAAG,GAAG,KAAKvH,MAAL,CAAYW,WAAZ,CAAwB3F,GAAxB,CAA4B4F,IAA5B,CAAZ;;AAEA,UAAI2G,GAAG,CAAC5I,aAAR,EAAuB;AACnBtD,QAAAA,MAAM,CAACgJ,MAAP,CAAclK,KAAd,EAAqBoD,OAArB,CAA8BiK,CAAD,IAAO;AAChC/I,UAAAA,MAAM,CAACQ,GAAP,CAAWsI,GAAX,EAAgBC,CAAhB;AACH,SAFD;AAGH,OAJD,MAIO;AACH/I,QAAAA,MAAM,CAACQ,GAAP,CAAWsI,GAAX,EAAgBpN,KAAhB;AACH;AACJ,KAXD;AAaAsE,IAAAA,MAAM,CAACwC,UAAP,GAAoB,IAApB;;AACAxC,IAAAA,MAAM,CAACyC,UAAP;AACH;;AAEDiD,EAAAA,UAAU,CAAC1F,MAAD,EAAS;AACf,SAAKkI,QAAL,CAAcpJ,OAAd,CAAuBkK,CAAD,IAAOA,CAAC,CAAC9B,SAAF,CAAYlH,MAAZ,CAA7B;AACH;;AAED6F,EAAAA,UAAU,CAACL,EAAD,EAAK;AACX,WAAO,KAAK6B,SAAL,CAAe4B,MAAf,CAAsBzD,EAAtB,CAAP;AACH;;AArHc;;ACAZ,MAAM0D,MAAN,CAAa;AAAA;AAAA,yCACF,IAAIrN,iBAAJ,EADE;;AAAA,sCAEL,IAAIyF,cAAJ,CAAmB,IAAnB,CAFK;AAAA;;AAIhB6H,EAAAA,iBAAiB,CAACpN,KAAD,EAAQ;AACrB,SAAKmG,WAAL,CAAiBpG,QAAjB,CAA0BC,KAA1B;AACH;;AAEDqN,EAAAA,cAAc,CAAC1H,IAAD,EAAO;AACjB,SAAKU,QAAL,CAActG,QAAd,CAAuB4F,IAAvB;AACH;;AAED2H,EAAAA,WAAW,GAAG;AACV,WAAO,IAAI/B,KAAJ,CAAU,IAAV,CAAP;AACH;;AAEDgC,EAAAA,YAAY,CAAChH,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACM,OAAN;AACH;;AAlBe;;;;"}